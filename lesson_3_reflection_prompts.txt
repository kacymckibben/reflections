When would you want to use a remote repository rather than keeping all your work local?
You would want to use a remote repository to share your work with others if others are providing feedback or working on the same project!

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forking is to copy repositories to and fro on the GitHub servers. Cloning is to copy a repository from GitHub to your local machine. Branching creates separate copies of your code to modify on your local machine. Branching is useful during development for collaboration and innovation on your local machine. Forking is useful when you want to get content from someone else's GitHub repository to your GitHub account and keep it public/accessible to others. Cloning is useful when you may want to make coding changes to files in your GitHub repository since it's often easier to make changes on your local machine rather than directly on GitHub.

What is the benefit of having a copy of the last known state of the remote stored locally?
Having a copy of the last known state of the remote stored locally means your local directory is up-to-date.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Without Git or GitHub, collaboration would be much more manual. You could manually create versions of files on DropBox or GoogleDrive to collaborate. I think this would be harder than just using Git and GitHub because you would miss out on all the functionality provided to make whole repositories accessible and to make developing branches/features/etc easier.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
It would be a good idea to make changes in a separate branch if you want others to be able to work off the master branch. If you're making a change that you know you want others to work off of or incorporate, it would be a better idea to work directly in master.
